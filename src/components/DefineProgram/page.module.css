/* Wrapper container */
.defineProgramWrapper {
  display: grid;
  grid-template-rows: repeat(2, auto) 1fr repeat(2, auto);
  background: #ffffff;
  border: 1px solid #e5e7eb;
  border-radius: 0.75rem; /* 12px for a softer card look */
  width: clamp(350px, 95vw, 750px);
  
  padding: 1rem;
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.05);
  transition: box-shadow 0.3s ease, transform 0.3s ease;
}
 
.defineProgramWrapper:hover {
  
  box-shadow: 0 8px 20px rgba(0, 0, 0, 0.08);
}

@media (max-width: 768px) {
  .defineProgramWrapper {
    /* MAX SPACE CHANGE 1: Minimize margin and padding on the main wrapper */
    margin: 0 auto; 
    border: none;
    box-shadow: none;
    padding: 0; 
  }
}

.defineProgramWrapper > div {
  /* Default padding for children */
  padding: 0.5rem;
  width: 90%;
}

@media (max-width: 768px) {
    .defineProgramWrapper > div {
        /* MAX SPACE CHANGE 2: Reduce padding on internal section containers */
        padding: 0.25rem; 
    }
}


/* Primary button (No significant space changes needed here, as the button itself scales well) */
.selectedButton {
  padding: 0.75rem;
  border: 2px solid #2563eb;
  border-radius: 0.5rem;
  background: linear-gradient(135deg, #3b82f6, #2563eb);
  color: #ffffff;
  font-size: 1rem;
  font-weight: 600;
  cursor: pointer;
  transition: all 0.3s ease;
  width: 30%;
  text-align: center;
  height: 3rem;
  box-shadow: 0 4px 8px rgba(37, 99, 235, 0.25);
}

.selectedButton:hover {
  background: linear-gradient(135deg, #2563eb, #1d4ed8);
  transform: translateY(-2px);
  box-shadow: 0 6px 12px rgba(37, 99, 235, 0.35);
}

@media (max-width: 768px) {
  .selectedButton {
    padding: 0.5rem 1rem;
    font-size: 0.95rem;
    width: 100%;
  }
}

.toleranceButtonsBlock {
  display: flex;
  justify-content: center;
  align-items: center;
  gap: 5px;
  flex-wrap: wrap; /* keeps row layout even if space gets tight */
}

/* all buttons inside */
.toleranceButtonsBlock button {
  flex: 1;
  min-width: 80px;
  max-width: 200px;
}

/* mobile: buttons still in row, but whole block fills 80% of screen width */
@media (max-width: 768px) {
  .toleranceButtonsBlock {
    width: 80vw;
   
  }
}


/* Input field */
.valinput {
  padding: 0.5rem 0.75rem;
  border: 2px solid #f59e0b;
  border-radius: 0.5rem;
  background-color: #fef9c3;
  color: #000;
  font-size: 1rem;
  font-weight: 500;
  transition: all 0.25s ease;
  width: clamp(60px, 15vw, 120px);
}

.valinput:hover {
  background: #fde68a;
  border-color: #f97316;
}

.valinput:focus {
  outline: none;
  border-color: #f97316;
  box-shadow: 0 0 0 3px rgba(249, 115, 22, 0.25);
}

/* Dynamic form layout */
.valueDynamicForm {
  display: flex;
  gap: 0.5rem;
  flex-wrap: wrap;
  justify-content: flex-start;
  align-items: center;
}

@media (max-width: 768px) {
  .valueDynamicForm {
    flex-direction: column;
    align-items: stretch;
    /* MAX SPACE CHANGE 3: Reduce gap between form elements */
    gap: 0.2rem; 
  }
}

/* Grid display */
.gridDisplayDiv {
  display: grid;
  /* Desktop columns: 5 content, 1 action (0.3fr) */
  grid-template-columns: repeat(5, 1fr) 0.3fr;
  gap: 0.5rem;
  width: 95%;
  
}

@media (max-width: 768px) {
  .gridDisplayDiv {
    /* Mobile columns: 6 equal columns (5 content + 1 action) */
    grid-template-columns: repeat(6, 1fr);
    width: 100%;
    /* MAX SPACE CHANGE 4: Reduce grid gaps to minimum */
    gap: 0.2rem; 
    /* MAX SPACE CHANGE 5: Remove margin around the grid */
    margin: 0; 
  }
}

.exportanddeletewrapper {
  max-width: clamp(300px, 100vw, 750px);
}